function Cube(w,h,x,y,color,lifetime){
    this.w=w;    this.h=h;    this.y=y;    this.x=x;    this.color=color;    this.maxLifetime=lifetime;    this.lifetime=lifetime;}function Smoke(x,y,duration,color,speed,lifeSpeed,cubeCount,canDissappear,spread){    this.range=spread;    this.speed=speed;    this.cubes=new Array();    this.cubeSize=5;    this.cubeCount=cubeCount;    this.duration=duration;    this.lifeSpeed=lifeSpeed;    this.color=color;    this.x=x;    this.y=y;    this.finished=false;    this.canDissappear=canDissappear;}Smoke.prototype.init=function(x,y,duration,color,speed,lifeSpeed,cubeCount,canDissappear,spread){    this.cubes=new Array();    for(var i=0;i<this.cubeCount;i++){        this.cubes.push(new Cube(this.cubeSize, this.cubeSize, 10, Math.random()*this.range, this.color, Math.random()*100));    }};Smoke.prototype.render=function(){    if(this.canDissappear)this.duration--;    for(var i=0;i<this.cubes.length;i++){        if(this.cubes[i].lifetime>0){                        var vectorX=this.cubes[i].x+((Math.random()*this.range)-this.range);            this.cubes[i].y-=Math.random()*this.speed;            var vectorY=this.cubes[i].y;            app.ctx.fillStyle =this.cubes[i].color;            app.ctx.fillRect(vectorX, vectorY, this.cubeSize, this.cubeSize);            this.cubes[i].lifetime-=this.lifeSpeed;        }else{            if(this.duration>0){                this.cubes[i].x=this.x;                this.cubes[i].y=this.y+Math.random()*29;                this.cubes[i].lifetime=Math.random()*this.cubes[i].maxLifetime;            }else{                this.cubes.splice(i,1);            }        }    }    if(this.cubes.length<=0)this.finished=true;}